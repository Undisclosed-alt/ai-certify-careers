# docker-compose.yml  (replace the whole file with this)
services:
  db:
    image: postgres:16-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"

  # REST API
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - PYTHONPATH=/code
    volumes:
      - ./:/code
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"

  # background ingester
  worker:
    build:                       # ‚Üê build the *same* image the backend uses
      context: .
      dockerfile: Dockerfile.backend
    command: python -m backend.app.worker
    environment:
      - DATABASE_URL=postgresql+asyncpg://careers_user:careers_pass@db:5432/careers
      - PYTHONPATH=/code
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  adminer:
    image: adminer:latest
    restart: unless-stopped
    depends_on:
      - db
    ports:
      - "8080:8080"

volumes:
  db_data:
